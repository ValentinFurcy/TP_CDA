<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TP_API_Wiky_Auth</name>
    </assembly>
    <members>
        <member name="M:TP_API_Wiky_Auth.Controllers.ArticleController.CreateArticle(DTOs.ArticleDTOs.ArticleCreateDTO)">
            <summary>
            Create article
            </summary>
            <param name="articleDTO"></param>
            <returns></returns>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.ArticleController.DeleteArticleAsync(System.Int32)">
            <summary>
            Delete Article and Comments if they exist if user it's author or admin
            </summary>
            <param name="articleId"></param>
            <returns></returns>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.ArticleController.UpdateArticleAsync(DTOs.ArticleDTOs.ArticleUpdateDTO)">
            <summary>
            Update article if user it's author or admin
            </summary>
            <param name="articleToUpd"></param>
            <returns></returns>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.ArticleController.GetAllArticleAsync">
            <summary>
            Get All Article
            </summary>
            <returns></returns>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.CommentController.CreateComment(DTOs.CommentDTOs.CommentCreateDTO)">
            <summary>
            Create comment for article
            </summary>
            <param name="commentDTO"></param>
            <returns></returns>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.CommentController.UpdateComment(DTOs.CommentDTOs.CommentUpdateDTO)">
            <summary>
            Update comment if user it's author or admin 
            </summary>
            <param name="commentUpdateDTO"></param>
            <returns></returns>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.CommentController.DeleteComment(System.Int32)">
            <summary>
            Delete comment if user it's author or admin
            </summary>
            <param name="commentId"></param>
            <returns></returns>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.CommentController.GetCommentsByUserId(System.String)">
            <summary>
            Get Comment by UserId
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:TP_API_Wiky_Auth.Controllers.ThemeController">
            <summary>
            Controller reserved for ADMIN
            </summary>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.ThemeController.CreateTheme(DTOs.ThemeDTOs.ThemeDTO)">
            <summary>
            Create theme reserved for ADMIN
            </summary>
            <param name="themeDTO">object themeDTO</param>
            <returns></returns>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.ThemeController.GetAllTheme">
            <summary>
            GetAll theme reserved for ADMIN
            </summary>
            <returns></returns>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.ThemeController.UpdateTheme(DTOs.ThemeDTOs.ThemeDTO)">
            <summary>
            Update Theme reserved for ADMIN
            </summary>
            <param name="themeUpdateDTO">object themeUpdateDTO</param>
            <returns></returns>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.ThemeController.DeleteTheme(System.Int32)">
            <summary>
            Delete Theme reserved for ADMIN
            </summary>
            <param name="themeId">id theme</param>
            <returns>Indique si la suppression du thème a réussi <c>true</c> ou non <c>false</c></returns>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.UserController.RegisterUser(DTOs.UserDTOs.UserRegisterDTO)">
            <summary>
            Register User with role User
            </summary>
            /// <param name="userRegisterDTO"></param>
            <returns></returns>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.UserController.CreateRole">
            <summary>
            Create Role if not existing
            </summary>
            <returns></returns>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.UserController.RegisterAdmin(DTOs.UserDTOs.UserRegisterDTO)">
            <summary>
            Create User with Role Admin
            </summary>
            <param name="userRegisterDTO"></param>
            <returns></returns>
        </member>
        <member name="M:TP_API_Wiky_Auth.Controllers.UserController.Logout">
            <summary>
            Logout
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
