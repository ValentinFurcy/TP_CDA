// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(LocationCodeFirstContext))]
    [Migration("20240408124833_MaJ_vehicule")]
    partial class MaJ_vehicule
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price_KM")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Citadine",
                            Price_KM = 50
                        },
                        new
                        {
                            Id = 2,
                            Label = "Berline",
                            Price_KM = 80
                        });
                });

            modelBuilder.Entity("Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateNaissance")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateNaissance = new DateOnly(1990, 10, 20),
                            FirstName = "Durand",
                            LastName = "Olivier"
                        },
                        new
                        {
                            Id = 2,
                            DateNaissance = new DateOnly(1993, 12, 2),
                            FirstName = "Dupond",
                            LastName = "Nathan"
                        },
                        new
                        {
                            Id = 3,
                            DateNaissance = new DateOnly(1988, 10, 20),
                            FirstName = "Croft",
                            LastName = "Lara"
                        });
                });

            modelBuilder.Entity("Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date_End")
                        .HasColumnType("date");

                    b.Property<DateOnly>("Date_Start")
                        .HasColumnType("date");

                    b.Property<int>("Nb_KM")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Entities.Marque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Marques");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Peugeot"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Renault"
                        });
                });

            modelBuilder.Entity("Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Immatriculation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarqueId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MarqueId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Color = "Rouge",
                            MarqueId = 1,
                            Model = "208"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Color = "Rouge",
                            MarqueId = 1,
                            Model = "208"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Color = "Rouge",
                            MarqueId = 1,
                            Model = "208"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Color = "Rouge",
                            MarqueId = 1,
                            Model = "208"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Color = "Rouge",
                            MarqueId = 1,
                            Model = "208"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Color = "Rouge",
                            MarqueId = 1,
                            Model = "208"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Color = "Rouge",
                            MarqueId = 1,
                            Model = "208"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Color = "Rouge",
                            MarqueId = 1,
                            Model = "208"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Color = "Rouge",
                            MarqueId = 1,
                            Model = "208"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Color = "Rouge",
                            MarqueId = 1,
                            Model = "208"
                        });
                });

            modelBuilder.Entity("Entities.Location", b =>
                {
                    b.HasOne("Entities.Client", "Client")
                        .WithMany("Location")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Entities.Vehicle", b =>
                {
                    b.HasOne("Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Marque", "Marque")
                        .WithMany()
                        .HasForeignKey("MarqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Marque");
                });

            modelBuilder.Entity("Entities.Client", b =>
                {
                    b.Navigation("Location");
                });
#pragma warning restore 612, 618
        }
    }
}
